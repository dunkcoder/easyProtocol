package com.ep.net.packet.bean;

import com.ep.stream.MarshalException;
import com.ep.stream.OctetsStream;

//This File Is Generated By DB Generator, Do Not Modify.
/**
 *  消息实体1100
 */
public class MBBattlePGeneral implements com.ep.stream.Marshal
{
	// 武将格子的状态（LOCK(1, "锁定中"), IDLE(2, "空闲中"),3, "已有上阵"))
	public int state;
	// 武将的原型id
	public int pgeneralId;
	// false 不是主武将 true 为主武将
	public boolean mainGeneralCheck;
	// 条件列表逗号分隔（锁定中才有值）
	public String precondition;

	public MBBattlePGeneral()
	{
		this.state = 0;
		this.pgeneralId = 0;
		this.mainGeneralCheck = true;
		this.precondition = "";
	}

	public MBBattlePGeneral(int _state_, int _pgeneralId_, boolean _mainGeneralCheck_, String _precondition_)
	{
		this.state = _state_;
		this.pgeneralId = _pgeneralId_;
		this.mainGeneralCheck = _mainGeneralCheck_;
		this.precondition = _precondition_;
	}


	@Override
	public OctetsStream marshal(OctetsStream _os_)
	{
		_os_.marshal(state);
		_os_.marshal(pgeneralId);
		_os_.marshal(mainGeneralCheck);
		_os_.marshal(precondition,"UTF-8");
		return _os_;
	}

	@Override
	public OctetsStream unmarshal(OctetsStream _os_) throws MarshalException
	{
		state = _os_.unmarshal_int();
		pgeneralId = _os_.unmarshal_int();
		mainGeneralCheck = _os_.unmarshal_boolean();
		precondition = _os_.unmarshal_String("UTF-8");
		return _os_;
	}

	@Override
	public final boolean equals(Object _o_)
	{
		if(this == _o_)
			return true;
		if(!(_o_ instanceof com.ep.net.packet.bean.MBBattlePGeneral))
			return false;
		com.ep.net.packet.bean.MBBattlePGeneral _o_t = (com.ep.net.packet.bean.MBBattlePGeneral)_o_;
		if(state != _o_t.state)
			return false;
		if(pgeneralId != _o_t.pgeneralId)
			return false;
		if(mainGeneralCheck != _o_t.mainGeneralCheck)
			return false;
		if(!precondition.equals(_o_t.precondition))
			return false;
		return true;
	}

	@Override
	public final int hashCode()
	{
		int _h_ = 0;
		_h_ = 31 * _h_ + state;
		_h_ = 31 * _h_ + pgeneralId;
		_h_ = 31 * _h_ + (mainGeneralCheck ? 1231 : 1237);
		_h_ = 31 * _h_ + precondition.hashCode();
		return _h_;
	}

	@Override
	public final String toString()
	{
		return toString(0);
	}

	public final String toString(int depth) {
		depth++;
		StringBuilder buffer = new StringBuilder();
		buffer.append('\n');
		for (int i = 0; i < depth - 1; i++){
			buffer.append('\t');
		}
		buffer.append('{');
		buffer.append('\n');

		for (int i = 0; i < depth; i++){
			buffer.append('\t');
		}
		buffer.append("state").append(": ");
		buffer.append(state);
		buffer.append(';');
		buffer.append("\n");


		for (int i = 0; i < depth; i++){
			buffer.append('\t');
		}
		buffer.append("pgeneralId").append(": ");
		buffer.append(pgeneralId);
		buffer.append(';');
		buffer.append("\n");


		for (int i = 0; i < depth; i++){
			buffer.append('\t');
		}
		buffer.append("mainGeneralCheck").append(": ");
		buffer.append(mainGeneralCheck);
		buffer.append(';');
		buffer.append("\n");


		for (int i = 0; i < depth; i++){
			buffer.append('\t');
		}
		buffer.append("precondition").append(": ");
		buffer.append(precondition);
		buffer.append(';');
		buffer.append("\n");


		for ( int i = 0 ; i < depth-1 ; i++ ) {
			buffer.append('\t');
		}
		buffer.append('}');
		buffer.append(';');
		return buffer.toString();
	}
}
